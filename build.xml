<project name="plovr" basedir="." default="build">

  <property file="${basedir}/build.properties" />
  <property file="${basedir}/default.build.properties" />

  <property name="src.dir" value="${basedir}/src" />
  <property name="test.dir" value="${basedir}/test" />
	<property name="testdata.dir" value="${basedir}/testdata" />
  <property name="www.dir" value="${basedir}/www" />
  <property name="demo.dir" value="${basedir}/demo" />
  <property name="lib.dir" value="${basedir}/lib" />
  <property name="build.dir" value="${basedir}/build" />
  <property name="classes.dir" value="${build.dir}/classes" />
  <property name="www.build.dir" value="${build.dir}/www" />
  <property name="demo.build.dir" value="${build.dir}/demo" />

  <!-- In order to build the jar, each of the Closure Tools must be          -->
  <!-- checked out in a parallel directory.                                  -->
  <property name="closure-compiler.dir" value="${basedir}/../closure-compiler" />
  <property name="closure-library.dir" value="${basedir}/../closure-library" />
  <property name="closure-templates.dir" value="${basedir}/../closure-templates" />

  <path id="plovr.classpath">
    <fileset dir="${lib.dir}" includes="*.jar" />
    <pathelement location="${classes.dir}" />
  </path>

  <target name="clean" description="remove all generated files">
    <delete dir="${build.dir}" />
  </target>

  <target name="compile" description="compile Java source code">
    <mkdir dir="${classes.dir}" />
    <javac srcdir="${src.dir}"
           destdir="${classes.dir}"
           classpathref="plovr.classpath"
           debug="on"
           >
    </javac>
    <javac srcdir="${test.dir}"
           destdir="${classes.dir}"
           classpathref="plovr.classpath"
           debug="on"
           >
    </javac>
  </target>

  <target name="test" depends="compile" description="run the unit tests">
    <junit failureproperty="hasFailingTests"
           showoutput="true">

      <formatter type="plain" usefile="false" />

      <batchtest fork="yes">
        <fileset dir="${test.dir}">
          <include name="**/*Test*.java" />
        </fileset>
      </batchtest>
      <classpath refid="plovr.classpath"></classpath>
    </junit>
    <fail if="hasFailingTests" />
  </target>

  <target name="externs">
    <mkdir dir="${classes.dir}" />
    <exec executable="sh"
          output="${classes.dir}/externs_manifest.txt"
          failonerror="true">
      <arg value="${basedir}/listfiles.sh" />
      <arg value="${closure-compiler.dir}/externs" />
    </exec>
  </target>

  <target name="library">
    <mkdir dir="${classes.dir}" />
    <exec executable="sh"
          output="${classes.dir}/library_manifest.txt"
          failonerror="true">
      <arg value="${basedir}/listfiles.sh" />
      <arg value="${closure-library.dir}/closure/goog" />
    </exec>
  </target>

  <target name="third_party">
    <mkdir dir="${classes.dir}" />
    <exec executable="sh"
          output="${classes.dir}/third_party_manifest.txt"
          failonerror="true">
      <arg value="${basedir}/listfiles.sh" />
      <arg value="${closure-library.dir}/third_party/closure/goog" />
    </exec>
  </target>

  <target name="jar"
          depends="compile, externs, library, third_party"
          description="build plovr.jar">
    <mkdir dir="${build.dir}" />
    <copy todir="${classes.dir}/org/plovr">
      <fileset dir="${src.dir}/org/plovr">
        <include name="*.js" />
        <include name="*.soy" />
      </fileset>
    </copy>
    <jar destfile="${build.dir}/plovr.jar">
      <zipfileset dir="${closure-compiler.dir}/externs/"
                  includes="**/*.js"
                  prefix="externs"
                  />
      <zipfileset dir="${closure-library.dir}/closure/goog/"
                  includes="**/*.js"
                  excludes="deps.js"
                  prefix="closure/goog"
                  />
      <zipfileset dir="${closure-library.dir}/third_party/closure/goog/"
                  includes="**/*.js"
                  excludes="deps.js"
                  prefix="third_party/closure/goog"
                  />
      <zipfileset dir="${closure-templates.dir}/javascript/"
                  includes="soyutils_usegoog.js"
                  prefix="soy" />
      <zipgroupfileset dir="${lib.dir}" includes="*.jar" />
      <fileset dir="${classes.dir}" />
      <manifest>
        <attribute name="Main-Class" value="org.plovr.cli.Main" />
      </manifest>
    </jar>
  </target>

  <target name="integration-test"
          depends="jar"
          description="builds the jar and runs it on localhost:9810">
    <echo>Visit http://localhost:9810/compile?id=integration-test</echo>
    <java jar="${build.dir}/plovr.jar" fork="true">
      <arg value="serve" />
      <arg value="${testdata.dir}/example/integration-test-config.js" />
    	<arg value="${testdata.dir}/modules/plovr-config.js" />
      <jvmarg value="-Xdebug" />
      <jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000"/>
    </java>
  </target>

  <target name="www">
    <mkdir dir="${www.build.dir}" />
    <copy todir="${www.build.dir}">
      <fileset dir="${www.dir}" />
    </copy>
  </target>

  <target name="demo-www"
          description="create the web content for the demo">
    <mkdir dir="${demo.build.dir}" />
    <copy todir="${demo.build.dir}">
      <fileset dir="${demo.dir}" />
    </copy>
    <replace dir="${demo.build.dir}" value="${PLOVR_HOST}">
      <include name="*.html" />
      <replacetoken>@PLOVR_HOST@</replacetoken>
    </replace>
  </target>

  <target name="run-demo" description="runs the demo">
    <!--
    The <available> and <fail> tasks are used rather than depends because it is
    expensive to rebuild the jar and web site every time the demo is restarted
    when developing it iteratively.
    -->
    <available file="${demo.build.dir}"
               type="dir"
               property="demo.build.dir.present"
               />
    <fail unless="demo.build.dir.present">
      The demo web site has not been built. Run "ant demo-www" to build it.
    </fail>
    <available file="${build.dir}/plovr.jar"
               type="file"
               property="jar.present"
               />
    <fail unless="jar.present">
      The plovr jar has not been built. Run "ant jar" to build it.
    </fail>

    <copy file="${build.dir}/plovr.jar" tofile="${demo.build.dir}/plovr.jar" />
    <java jar="${demo.build.dir}/plovr.jar"
          dir="${demo.build.dir}"
          fork="true">
      <arg value="serve" />
      <arg value="${demo.build.dir}/demo-config.js" />
    </java>

  </target>

  <target name="build" depends="jar" />

</project>
